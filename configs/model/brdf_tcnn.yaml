arch:
  _target_: models.tensor_nerf.TensorNeRF
  _partial_: True

  rayMarch_weight_thres: 1e-4
  recur_weight_thres: 1e-4
  max_recurs: 1
  roughness_rays: 50
  max_recur_rays: 5
  infinity_border: False
  use_diffuse: True
  appdim_noise_std: 0.0
  rough_light: False
  bg_noise: 0
  # world_bounces: 0
  world_bounces: 2048000
  max_normal_similarity: 1 #0.87
  cold_start_bg_iters: 100
  attach_normal_iter: 0
  transmittance_thres: 1.0
  back_clip: 0.0
  percent_bright: 0.1
  transmit_iter: 1000
  normalize_brdf: False
  noise_decay: 0.999
  use_predicted_normals: True
  orient_world_normals: False

  detach_inter: True
  selector:
    _target_: modules.pt_selectors.TopNWeight
    _partial_: True
    max_selected: 25000000
    weight_thres: 1e-3

  # bright_sampler:
  #   _target_: modules.bright_sampler.BrightnessImportanceSampler
  #   _partial_: True
  #   scale: 10
  #   update_freq: 50

  tonemap:
    # _target_: models.tonemap.HDRTonemap
    # _target_: models.tonemap.LinearTonemap
    _target_: models.tonemap.SRGBTonemap

  sampler:
    _target_: samplers.continuous_alphagrid.ContinuousAlphagrid
    _partial_: True
    multiplier: 1
    shrink_iters: [2000, 4000]
    dynamic_batchsize: False
    # sample_mode: multi_jitter
    sample_mode: single_jitter
    test_sample_mode: midpoint
    # threshold: 5e-5
    threshold: 1e-4
    grid_size: 256
    conv: 10
    bound: 1.5

    # _target_: samplers.alphagrid.AlphaGridSampler
    # _partial_: True
    # enable_alpha_mask: False
    # nEnvSamples: 0
    # update_list: [4000, 8000]
    # multiplier: 1
    # threshold: 0.0001

    # _target_: samplers.raymarch.Raymarcher
    # _partial_: True
    # max_samples: 100000
    # grid_size: 256
    # max_steps: 1024

  brdf_sampler:
    _target_: models.brdf.GGXSampler
    _partial_: True
    min_roughness: 0.00

  brdf:
    _target_: models.brdf.MLPBRDF
    _partial_: True
    # pbr: True

    # v_encoder:
    #   _target_: models.ish.ListISH
    #   degs: [0,1,2,4]
    # l_encoder:
    #   _target_: models.ish.ListISH
    #   degs: [0,1,2,4]
    # num_layers: 4
    # feape: 0
    # featureC: 128
    feape: 0
    dotpe: -1
    h_encoder:
      _target_: models.render_modules.PE
      max_degree: 2
    d_encoder:
      _target_: models.render_modules.PE
      max_degree: 2
    # h_encoder:
    #   _target_: models.ish.ListISH
    #   degs: [0,1,2,4]
    # d_encoder:
    #   _target_: models.ish.ListISH
    #   degs: [0,1,2,4]
    featureC: 64
    num_layers: 4

    # num_layers: 4
    # dotpe: 6
    # featureC: 128
    # activation: 'sigexp'
    bias: 1
    activation: 'sigmoid'
    # activation: 'sigmoid'
    lr: 1e-4

  bg_module:
    _target_: models.bg_modules.HierarchicalCubeMap
    bg_resolution: 512
    mipbias: 0
    num_levels: 1
    TV_max_scale: 1
    activation: 'exp'
    power: 2
    stds: []
    lr: 0.1
    init_val: -1
    mul_lr: 0.1
    brightness_lr: 0.01
    betas: [0.9, 0.999]
    mul_betas: [0.9, 0.99]
    mipbias_lr: 1e-4
    mipnoise: 0.0

  diffuse_module:
    _partial_: True
    _target_: models.render_modules.MLPDiffuse
    pospe: -1
    feape: 0
    # pospe: 12
    # feape: 0
    # view_encoder:
    #   _target_: models.render_modules.PE
    #   max_degree: 2
    featureC: 128
    num_layers: 3
    lr: 1e-4
    tint_offset: 0
    diffuse_offset: -1
    # allocation: 7

  normal_module:
    _partial_: True
    _target_: models.render_modules.MLPNormal
    lr: 6e-3
    # pospe: -1
    # feape: 2
    # pospe: 0
    pospe: 0
    feape: 0
    featureC: 128
    num_layers: 3
    size_multi: 2.5e-3
    # allocation: 3

  # ref_module:
  #   _partial_: True
  #   _target_: models.render_modules.MLPRender_FP
  #   feape: 0
  #   lr: 1e-4
  #   # view_encoder:
  #   #   _target_: models.ish.FullISH
  #   #   max_degree: 4
  #   ref_encoder:
  #     _target_: models.ish.ListISH
  #     degs: [0,1,2,4,8,16]
  #   # ref_encoder:
  #   #   _target_: models.render_modules.PE
  #   #   max_degree: 4
  #   # ref_encoder:
  #   #   _target_: models.ish.ISH
  #   #   max_degree: 6
  #   # ref_encoder:
  #   #   _target_: models.ish.RandISH
  #   #   rand_n: 64
  #   #   std: 5
  #   # activation: 'softplus'
  #   activation: 'sigmoid'
  #   featureC: 256
  #   num_layers: 8

  rf: 'placeholder'

params:
  L1_weight_inital: 0
  L1_weight_rest: 0

  TV_weight_density: 0.0
  TV_weight_app: 0.0
  TV_weight_bg: 5e-5
  envmap_lambda: 5e-5
  normal_lambda: 1e-2
  final_normal_lambda: 6e-2
  diffuse_lambda: 0
  backwards_rays_lambda: 0.2
  final_ori_lambda: 0.05
  brdf_lambda: 0
  
  floater_lambda: 0 # 1e-3
  visibility_lambda: 0
  # floater_lambda: 0.00001
  charbonier_eps: 1e-3
  ortho_weight: 0
  N_visibility_rays: 128

  n_iters: 30000
  charbonier_loss: false
  start_density: 0.02
  lr_init: 0.02
  batch_size: 4096

